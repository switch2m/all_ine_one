Service Mesh with sidecar:
its concept is to extract all the non bisness logic out of the microservice and into in its own small sidecar application that:
handles these network logic
acts as a proxy
its third party application
cluster opertor can easily configure throw a simple api
and developers can now focus on the actual business logic
and the control plane take care of injects this proxy in every microservice pod so now those microservices can talk to each other throw those proxy
and the network layer for service to service communication consisting of control plane and the proxy is a service Mesh

Service Mesh Core features: Traffic Split
This features allows you to split traffic to a microservice 
lets say we have a new version release of a payment microservice and we want to test it, we can't be sure that there is no bug,
in this case we want to send for example just 10% percent of traffic to the new release and the rest of the previous stable release for period of time
to make sure it realy works
so this feature helps u release a new version without worrying about breaking the application and its also known as Canary Deployment

Service Mesh is a Pattern or Paradigm and Istio is one of its implementaion

Istio:
in istio architecture the proxy are envoy proxy
and the control plane component in istio is Istiod which manages and injects the envoy proxies in each of the microservices pod
what we can do with istio:
traffic routing
which service can communicate
traffic split
retry rules
there is two main CRD's for configuring the service to service communication:
  VirtualService: How to route the traffic to a specific service
  DestinationRule: Configure what happens to traffic for that destination(like what kind of loadbalancing to use to talk to the pods behind the destination service)

Istio features:
Dynamic service discovery (it detect automaticaly new services and take care of injecting the envoy proxy)
Security-Certificate Management geneerate certificate for all the microservices in the cluster to allow secure TLS communication between proxies of those microservices
gather telemetry data 

Istio Ingress Gateway:
we can think of it as an alternative to nginx ingress controller
so istio gateway run as a pod in ur cluster and acts as a loadbalancer by accepting incoming traffic in ur cluster and gateway will directs traffic to MS using VirtualService

CRD:
CRD Custom Resource Definition are custom kubernetes component that can be used to allow configuring this third party technologies using kubernetes yaml file






